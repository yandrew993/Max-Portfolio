@import '../../styles/variables';
@import '../../styles/mixins';

.contact {
  position: relative;
  background-color: #fafafa;
  padding: 6rem 0;
  overflow: hidden;
  
  .container {
    max-width: 1200px;
    margin: 0 auto;
    padding: 0 2rem;
    position: relative;
    z-index: 2;
  }
  
  &__decoration {
    position: absolute;
    border-radius: 50%;
    z-index: 1;
    
    &--1 {
      top: -10%;
      right: -5%;
      width: 40vw;
      height: 40vw;
      background: linear-gradient(135deg, rgba($primary-color, 0.02) 0%, rgba($primary-color, 0.05) 100%);
    }
    
    &--2 {
      bottom: -10%;
      left: -5%;
      width: 30vw;
      height: 30vw;
      background: linear-gradient(135deg, rgba($accent-color, 0.02) 0%, rgba($accent-color, 0.08) 100%);
    }
  }
  
  &__container {
    display: grid;
    grid-template-columns: 1fr 1.5fr;
    gap: 4rem;
    margin-top: 3rem;
    opacity: 0;
    transform: translateY(30px);
    transition: opacity 0.8s ease-out, transform 0.8s ease-out;
    
    &.visible {
      opacity: 1;
      transform: translateY(0);
    }
    
    @include respond(tablet) {
      grid-template-columns: 1fr;
      gap: 3rem;
    }
  }
  
  &__info {
    display: flex;
    flex-direction: column;
    gap: 3rem;
  }
  
  &__intro {
    opacity: 0;
    transform: translateY(20px);
    animation: fadeInUp 0.8s ease forwards;
    animation-play-state: paused;
    
    .visible & {
      animation-play-state: running;
    }
    
    h3 {
      font-size: 1.8rem;
      color: $primary-color;
      margin-bottom: 1rem;
    }
    
    p {
      color: $text-color;
      line-height: 1.8;
    }
  }
  
  &__methods {
    display: flex;
    flex-direction: column;
    gap: 1.5rem;
  }
  
  &__method {
    display: flex;
    align-items: flex-start;
    gap: 1.2rem;
    background-color: white;
    padding: 1.5rem;
    border-radius: 12px;
    box-shadow: 0 8px 20px rgba(0, 0, 0, 0.05);
    opacity: 0;
    transform: translateX(-20px);
    animation: fadeInRight 0.6s ease forwards;
    animation-play-state: paused;
    transition: transform 0.3s ease, box-shadow 0.3s ease;
    
    .visible & {
      animation-play-state: running;
    }
    
    &:hover {
      transform: translateY(-5px);
      box-shadow: 0 12px 25px rgba(0, 0, 0, 0.08);
    }
    
    &-icon {
      width: 50px;
      height: 50px;
      min-width: 50px;
      display: flex;
      align-items: center;
      justify-content: center;
      background: rgba($accent-color, 0.1);
      color: $accent-color;
      border-radius: 12px;
      font-size: 1.3rem;
    }
    
    &-content {
      h4 {
        font-size: 1.1rem;
        color: $primary-color;
        margin-bottom: 0.3rem;
      }
      
      a, p {
        color: $text-color;
        transition: color 0.3s ease;
      }
      
      a:hover {
        color: $accent-color;
      }
    }
  }
  
  &__form-container {
    background-color: white;
    border-radius: 20px;
    box-shadow: 0 15px 40px rgba(0, 0, 0, 0.08);
    padding: 2.5rem;
    opacity: 0;
    transform: translateY(30px);
    animation: fadeInUp 0.8s ease forwards;
    animation-play-state: paused;
    
    .visible & {
      animation-play-state: running;
    }
  }
  
  &__form {
    display: grid;
    grid-template-columns: 1fr 1fr;
    gap: 1.5rem;
    
    @include respond(phone) {
      grid-template-columns: 1fr;
    }
    
    .form-group {
      position: relative;
      
      &:nth-child(3), &:nth-child(4) {
        grid-column: 1 / -1;
      }
      
      label {
        display: block;
        margin-bottom: 0.5rem;
        font-size: 0.9rem;
        font-weight: 500;
        color: $primary-color;
      }
      
      input, textarea {
        width: 100%;
        padding: 1rem;
        border: 1px solid rgba($text-color, 0.2);
        border-radius: 8px;
        font-family: inherit;
        font-size: 1rem;
        transition: border-color 0.3s ease, box-shadow 0.3s ease;
        
        &:focus {
          outline: none;
          border-color: $accent-color;
          box-shadow: 0 0 0 3px rgba($accent-color, 0.1);
        }
        
        &.error {
          border-color: #ff3b30;
          background-color: rgba(#ff3b30, 0.02);
        }
      }
      
      textarea {
        resize: vertical;
      }
      
      .error-message {
        color: #ff3b30;
        font-size: 0.8rem;
        margin-top: 0.4rem;
        animation: fadeIn 0.3s ease;
      }
    }
    
    .submit-button {
      grid-column: 1 / -1;
      background-color: $accent-color;
      color: white;
      border: none;
      border-radius: 50px;
      padding: 1rem 2rem;
      font-size: 1rem;
      font-weight: 600;
      cursor: pointer;
      display: flex;
      align-items: center;
      justify-content: center;
      gap: 0.8rem;
      margin-top: 1rem;
      box-shadow: 0 8px 15px rgba($accent-color, 0.3);
      transition: all 0.3s ease;
      
      &:hover:not(:disabled) {
        background-color: darken($accent-color, 5%);
        transform: translateY(-3px);
        box-shadow: 0 12px 20px rgba($accent-color, 0.4);
      }
      
      &:active:not(:disabled) {
        transform: translateY(-1px);
      }
      
      &:disabled {
        opacity: 0.8;
        cursor: not-allowed;
      }
      
      &.submitting {
        pointer-events: none;
      }
    }
  }
  
  .form-success {
    display: flex;
    flex-direction: column;
    align-items: center;
    justify-content: center;
    text-align: center;
    min-height: 300px;
    animation: fadeIn 0.5s ease;
    
    .success-icon {
      width: 80px;
      height: 80px;
      background-color: rgba($accent-color, 0.1);
      border-radius: 50%;
      display: flex;
      align-items: center;
      justify-content: center;
      font-size: 2rem;
      color: $accent-color;
      margin-bottom: 1.5rem;
      animation: scaleIn 0.5s ease-out;
    }
    
    h3 {
      font-size: 1.8rem;
      color: $primary-color;
      margin-bottom: 1rem;
    }
    
    p {
      color: $text-color;
    }
  }
  
  .spinner {
    width: 24px;
    height: 24px;
    border: 3px solid rgba(white, 0.3);
    border-top-color: white;
    border-radius: 50%;
    animation: spin 0.8s linear infinite;
  }
}

@keyframes fadeInUp {
  from {
    opacity: 0;
    transform: translateY(20px);
  }
  to {
    opacity: 1;
    transform: translateY(0);
  }
}

@keyframes fadeInRight {
  from {
    opacity: 0;
    transform: translateX(-20px);
  }
  to {
    opacity: 1;
    transform: translateX(0);
  }
}

@keyframes fadeIn {
  from {
    opacity: 0;
  }
  to {
    opacity: 1;
  }
}

@keyframes scaleIn {
  from {
    transform: scale(0);
  }
  to {
    transform: scale(1);
  }
}

@keyframes spin {
  to {
    transform: rotate(360deg);
  }
}